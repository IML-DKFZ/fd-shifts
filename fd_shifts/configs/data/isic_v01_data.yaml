# @package _group_

data:
  dataset: isic_v01
  data_dir: ${oc.env:DATASET_ROOT_DIR}/${data.dataset}
  pin_memory: True
  img_size: [128, 128, 3] #dataset is 28x28x1 either upscale it or need to adjust transforms and neural net
  num_workers: 1
  num_classes: 2
  reproduce_confidnet_splits: True
  target_transforms:
    train:
      extractZeroDim:
    val:
      extractZeroDim:
    test:
      extractZeroDim:  

  augmentations:
    train: # careful, the order here will determine the order of transforms (except normalize will be executed manually at the end after toTensor)
      resize: [128, 128]
      to_tensor:
      normalize:
        [[0.4376821, 0.4437697, 0.4728044], [0.19803012, 0.20101562, 0.19703614]]
      

    val:
      resize: [128, 128]
      to_tensor:
      normalize:
        [[0.4376821, 0.4437697, 0.47280442], [0.19803012, 0.20101562, 0.19703614]]
      
    test:
      resize: [128, 128]
      to_tensor:
      normalize:
        [[0.4376821, 0.4437697, 0.47280442], [0.19803012, 0.20101562, 0.19703614]]
      

  kwargs:
    
  # corbeire: 0.5 is not precise enough for OoD!
  #ByClass: 62 C unbalanced
  #MyMerge 47 C unbalanced
  #Balanced: 47 C
  #Letters: 26C
  #Digits: 10 C
  #MNIST: 10 C

eval:
  query_studies:
    iid_study: ${data.dataset}
    new_class_study:
      - cifar10
      - cifar100
      - tinyimagenet_resize

trainer:
  batch_size: 128
  num_epochs: ${fd_shifts.ifeq_else:${eval.ext_confid_name},tcp,320,${fd_shifts.ifeq_else:${eval.ext_confid_name},dg,150,100}}
  num_epochs_backbone: 100
  dg_pretrain_epochs: 50
  optimizer:
    lr: 1e-2
    weight_decay: 5e-4

model:
  network:
    name: ${fd_shifts.ifeq_else:${eval.ext_confid_name},devries,devries_and_enc,${fd_shifts.ifeq_else:${eval.ext_confid_name},tcp,confidnet_and_enc,svhn_small_conv}}
    backbone: ${fd_shifts.ifeq_else:${eval.ext_confid_name},devries,svhn_small_conv,${fd_shifts.ifeq_else:${eval.ext_confid_name},tcp,svhn_small_conv,null}}
