# @package _global_
defaults:
  - override /trainer/lr_scheduler: LinearWarmupCosineAnnealingLR

data:
  dataset: super_cifar100
  data_dir: ${oc.env:DATASET_ROOT_DIR}/cifar100
  pin_memory: True
  img_size: [384, 384, 3]
  num_workers: 24
  num_classes: 19
  reproduce_confidnet_splits: True
  augmentations:
    train: # careful, the order here will determine the order of transforms (except normalize will be executed manually at the end after toTensor)
      #      rotate: 15
      to_tensor:
      resize: 384
      normalize: [[0.4914, 0.4822, 0.4465], [0.2023, 0.1994, 0.2010]]
    val:
      to_tensor:
      resize: 384
      normalize: [[0.4914, 0.4822, 0.4465], [0.2023, 0.1994, 0.2010]]
    test:
      to_tensor:
      resize: 384
      normalize: [[0.4914, 0.4822, 0.4465], [0.2023, 0.1994, 0.2010]]
  kwargs:

eval:
  query_studies: # iid_study, new_class_study, sub_class_study, noise_study
    iid_study: super_cifar100_384

trainer:
  num_epochs:
  num_steps: ${fd_shifts.ifeq_else:${eval.ext_confid_name},dg,15000,10000}
  dg_pretrain_epochs:
  dg_pretrain_steps: 5000
  lr_scheduler_interval: step
