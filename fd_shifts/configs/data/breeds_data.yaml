# @package _global_

data:
  dataset: breeds
  data_dir: ${oc.env:DATASET_ROOT_DIR}/${data.dataset}
  pin_memory: True
  img_size: [224, 224, 3]
  num_workers: 12
  num_classes: 13 # entitiy-13
  reproduce_confidnet_splits: False
  augmentations:
    train: # careful, the order here will determine the order of transforms (except normalize will be executed manually at the end after toTensor)
      randomresized_crop: 224
      hflip: True
      color_jitter: [0.1, 0.1, 0.1]
      to_tensor:
      normalize: [[0.485, 0.456, 0.406], [0.229, 0.224, 0.225]]
    val:
      resize: 256
      center_crop: 224
      to_tensor:
      normalize: [[0.485, 0.456, 0.406], [0.229, 0.224, 0.225]]
    test:
      resize: 256
      center_crop: 224
      to_tensor:
      normalize: [[0.485, 0.456, 0.406], [0.229, 0.224, 0.225]] # keep standard norm. corruptions deviate result a bit from training data but ok.

  kwargs:
    info_dir_path: loaders/breeds_hierarchies

eval:
  query_studies:
    iid_study: breeds
    in_class_study: 
      - breeds_ood_test

trainer:
  batch_size: 128
  num_epochs: ${fd_shifts.ifeq_else:${eval.ext_confid_name},tcp,520,${fd_shifts.ifeq_else:${eval.ext_confid_name},dg,350,300}}
  dg_pretrain_epochs: 50
  num_epochs_backbone: 300
  optimizer:
    lr: 1e-1
    weight_decay: 1e-4

model:
  fc_dim: 2048
  network:
    name: ${fd_shifts.ifeq_else:${eval.ext_confid_name},devries,devries_and_enc,${fd_shifts.ifeq_else:${eval.ext_confid_name},tcp,confidnet_and_enc,resnet50}}
    backbone: ${fd_shifts.ifeq_else:${eval.ext_confid_name},devries,resnet50,${fd_shifts.ifeq_else:${eval.ext_confid_name},tcp,resnet50,null}}
